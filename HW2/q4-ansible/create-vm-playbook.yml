---
- name: Ansible test
  hosts: [localhost]
  user: root
  vars_files:
    - vars/config.yml
    
  tasks:
    - name: install packages
      apt:
        name: "{{ packages }}"
        state: present

  # Create a bridge named br-int
    - name: Create an OVS bridge
      openvswitch_bridge:
        bridge: "{{ ovs_network.br_name }}"
        state: present
      become: yes
      ignore_errors: true
    - name: Define OVS network
      virt_net:
        command: define
        name: "{{ ovs_network.name }}"
        xml: '{{ lookup("template", "network/bridge-ovs.xml") }}'
      become: yes
      ignore_errors: true
    - name: Start OVS network
      virt_net:
        command: start
        name: "{{ ovs_network.name }}"
      become: yes
      ignore_errors: true

    - name: Install VM1
      become: yes
      command: virt-clone --original sampleVM -n {{ VM[0] }} --auto-clone
      ignore_errors: yes

    - name: Install VM2
      become: yes
      command: virt-clone --original {{ VM[0] }} -n {{ VM[1] }} --auto-clone
      ignore_errors: yes

    - name: Attach interface to VM1
      command: virsh attach-interface --domain {{ VM[0] }} --type network --source {{ ovs_network.name }} --model virtio --config --live
      become: yes
    
    - name: Attach interface to VM2
      command: virsh attach-interface --domain {{ VM[1] }} --type network --source {{ ovs_network.name }} --model virtio --config --live
      become: yes

    - name: Start VM1
      virt:
        name: "{{ VM[0] }}"
        command: start
        state: running
      ignore_errors: true

    - name: Start VM2
      virt:
        name: "{{ VM[1] }}"
        command: start
        state: running
      ignore_errors: true

    - name: Assign IP to bridge
      command: "ifconfig {{ ovs_network.br_name }} 10.10.0.1/24"
      ignore_errors: true
      become: yes 

    - name: Create DHCP server for the bridge
      command: "sudo dnsmasq --interface={{ ovs_network.br_name }} --except-interface=lo --bind-interfaces --dhcp-range=10.10.0.2,10.10.0.254,12h"
      ignore_errors: true
      become: yes
    # - virt_net:
    #   command: list_nets

      #sudo virt-clone --original VM2 -n VM3 --auto-clone
      # - name: Create VM2 from VM1
      #become: yes
      #command: sudo virt-clone --original yjkamdarVM1 -n yjkamdarVM2 --auto-clone 
